syntax = "proto3";

/* Copyright 2022 Danny McClanahan */
/* SPDX-License-Identifier: AGPL-3.0-only */

package emdocs.proto.messages;

import "buffers.proto";
import "transforms.proto";

/* This is the interface clients need to implement! */
message Operation {
  /* The buffer to transform. */
  optional emdocs.proto.buffers.BufferId source = 1;
  /* The transform to perform. */
  optional emdocs.proto.transforms.Transform transform = 2;
}

message OperationResult {}

service OperationService {
  rpc ProcessOperation (Operation) returns (OperationResult);
}

message RemoteClient {
  optional string ip_address = 1;
}

message BufferAssociation {
  optional emdocs.proto.buffers.BufferId buffer_id = 1;
  optional RemoteClient remote = 2;
}

message IDEMessage {
  oneof type {
    Operation doc = 1;
    BufferAssociation link = 2;
  }
}

message ClientMessage {}

service IDEService {
  rpc ProcessIDEMessage (IDEMessage) returns (ClientMessage);
}
